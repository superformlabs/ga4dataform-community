config {
    type: "table",
    schema: dataform.projectConfig.vars.QUALITY_DATASET,
    description: "event id should be unique",
    dependencies: ["assertion_logs",{name:"ga4_events"}],
    tags:[dataform.projectConfig.vars.GA4_DATASET, "assertions"],
}

js {
    const { helpers } = require("includes/core/helpers");
    const config = helpers.getConfig();
}

with ga4 as (

select event_name,parse_date("%Y%m%d", event_date) event_date,
    concat(user_pseudo_id, 
            (select value.int_value from unnest(event_params) where key = 'ga_session_id')
            ) as session_id,
    concat( event_name , event_timestamp, user_pseudo_id, 
            (select value.int_value from unnest(event_params) where key = 'ga_session_id'),
            batch_page_id, batch_ordering_id, batch_event_index
            ) as event_id,
            user_pseudo_id
FROM `pd-strategy.analytics_207462216.events_20250505`
where  user_pseudo_id is not null 
)

SELECT event_date, event_name, 
(SAFE_DIVIDE(raw.events, flat.events)-1) * 100 events_diff, 
(SAFE_DIVIDE(raw.sessions, flat.sessions)-1) * 100 sessions_diff, 
(SAFE_DIVIDE(raw.pageviews, flat.pageviews)-1) * 100 pageviews_diff, 
(SAFE_DIVIDE(raw.users, flat.users)-1) * 100 users_diff, 
FROM
(
select event_date, event_name, count(  event_id) events, count(distinct session_id) sessions,
count(distinct if(event_name="page_view", session_id, NULL)) pageviews,
count(distinct user_pseudo_id) users
from ga4  group by all ) raw
JOIN
(select event_date, event_name, count(  event_id) events, count(distinct session_id) sessions,
count(distinct if(event_name="page_view", session_id, NULL)) pageviews,
count(distinct user_pseudo_id) users
FROM `pd-strategy.gmp_base.base_ga4_events`  where event_date='2025-05-05'  
 group by all ) flat
 USING(event_date, event_name)

--     -- Log assertions
--   INSERT INTO
--     ${ref("assertion_logs")}
--   VALUES
--     (CURRENT_TIMESTAMP(), assertion, '${ref("ga4_events")}', expectations, check, sample, assertion_status, error_msg);
--   END IF
-- }

post_operations {
  IF
    ${config.ASSERTIONS_EVENT_ID_UNIQUENESS} THEN
    -- raise error
    -- drop placeholder table
  DROP TABLE
    ${self()};
  IF
    check > expectations THEN RAISE
  USING
    MESSAGE = error_msg;
  END IF
    ;
  END IF
}

